-- MySQL Script generated by MySQL Workbench
-- 06/18/14 15:55:42
-- Model: Cart    Version: 01.07.00
SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema gpCart
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `gpCart` ;
CREATE SCHEMA IF NOT EXISTS `gpCart` DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ;
USE `gpCart` ;

-- -----------------------------------------------------
-- Table `addresses`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `addresses` (
  `addressID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `firstName` VARCHAR(255) NULL,
  `middleName` VARCHAR(255) NULL,
  `lastName` VARCHAR(255) NULL,
  `phone` VARCHAR(45) NULL,
  `email` VARCHAR(255) NULL,
  `line1` VARCHAR(255) NOT NULL,
  `line2` VARCHAR(255) NULL,
  `line3` VARCHAR(255) NULL,
  `city` VARCHAR(255) NULL,
  `zipPostcode` VARCHAR(255) NULL,
  `stateProvinceCounty` VARCHAR(255) NULL,
  `country` VARCHAR(255) NULL,
  `addressNotes` TEXT NULL,
  PRIMARY KEY (`addressID`),
  UNIQUE INDEX `address_id_UNIQUE` (`addressID` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `stores`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `stores` (
  `storeID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `storeName` VARCHAR(255) CHARACTER SET 'utf8' COLLATE 'utf8_unicode_ci' NOT NULL,
  `storeActive` TINYINT(1) UNSIGNED ZEROFILL NOT NULL,
  `storeNotes` TEXT CHARACTER SET 'utf8' COLLATE 'utf8_unicode_ci' NULL,
  `storeTheme` VARCHAR(255) CHARACTER SET 'utf8' COLLATE 'utf8_unicode_ci' NOT NULL,
  `addressID` BIGINT UNSIGNED NULL,
  `storePhone` VARCHAR(255) NULL,
  `emailOrders` VARCHAR(255) NULL,
  `emailContact` VARCHAR(255) NULL,
  `emailErrors` VARCHAR(255) NULL,
  `storePublicKey` BLOB NULL,
  `termsOfService` TEXT NULL,
  `storefrontCarousel` TINYINT(1) NULL,
  `storefrontCategories` TINYINT(1) NULL,
  `storefrontDescription` TEXT NULL,
  PRIMARY KEY (`storeID`),
  UNIQUE INDEX `store_id_UNIQUE` (`storeID` ASC),
  INDEX `fk_stores_addresses1_idx` (`addressID` ASC),
  CONSTRAINT `fk_stores_addresses1`
    FOREIGN KEY (`addressID`)
    REFERENCES `addresses` (`addressID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 3;


-- -----------------------------------------------------
-- Table `customers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `customers` (
  `customerID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `storeID` BIGINT UNSIGNED NOT NULL,
  `customCustomerID` VARCHAR(255) NULL,
  PRIMARY KEY (`customerID`, `storeID`),
  INDEX `fk_customers_stores1_idx` (`storeID` ASC),
  UNIQUE INDEX `customer_id_UNIQUE` (`customerID` ASC),
  CONSTRAINT `fk_customers_stores1`
    FOREIGN KEY (`storeID`)
    REFERENCES `stores` (`storeID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `refOrderStatusCodes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `refOrderStatusCodes` (
  `orderStatusCode` VARCHAR(45) NOT NULL,
  `orderStatusDescription` TEXT NULL,
  `sortOrder` TINYINT(1) NULL,
  PRIMARY KEY (`orderStatusCode`),
  UNIQUE INDEX `order_status_code_UNIQUE` (`orderStatusCode` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `refDeliveryStatusCodes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `refDeliveryStatusCodes` (
  `deliveryStatusCode` VARCHAR(45) NOT NULL,
  `deliveryStatusDescription` TEXT NULL,
  `sortOrder` TINYINT(1) NULL,
  PRIMARY KEY (`deliveryStatusCode`),
  UNIQUE INDEX `delivery_status_code_UNIQUE` (`deliveryStatusCode` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `paymentMethods`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `paymentMethods` (
  `paymentMethodID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `number1` TEXT NULL,
  `number2` TEXT NULL,
  `number3` TEXT NULL,
  `expMonth` TEXT NULL,
  `expYear` TEXT NULL,
  `paymentMethodNotes` TEXT NULL,
  PRIMARY KEY (`paymentMethodID`),
  UNIQUE INDEX `payment_method_id_UNIQUE` (`paymentMethodID` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `customerOrders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `customerOrders` (
  `orderID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `customerID` BIGINT UNSIGNED NOT NULL,
  `orderStatusCode` VARCHAR(45) NOT NULL,
  `deliveryStatusCode` VARCHAR(45) NOT NULL,
  `shippingAddressID` BIGINT UNSIGNED NULL,
  `paymentMethodID` BIGINT UNSIGNED NULL,
  `dateOrderPlaced` DATETIME NULL,
  `dateOrderPaid` DATETIME NULL,
  `orderNotes` TEXT NULL,
  `orderIP` VARCHAR(15) NULL,
  `totalOrderPrice` DECIMAL(13,2) NULL,
  `totalOrderTax` DECIMAL(13,2) NULL,
  `totalOrderDelivery` DECIMAL(13,2) NULL,
  `orderTaxableAmount` DECIMAL(13,2) NULL,
  PRIMARY KEY (`orderID`, `customerID`),
  UNIQUE INDEX `orderID_UNIQUE` (`orderID` ASC),
  INDEX `fk_customerOrders_refOrderStatusCodes1_idx` (`orderStatusCode` ASC),
  INDEX `fk_customerOrders_refDeliveryStatusCodes1_idx` (`deliveryStatusCode` ASC),
  INDEX `fk_customerOrders_addresses1_idx` (`shippingAddressID` ASC),
  INDEX `fk_customerOrders_paymentMethods1_idx` (`paymentMethodID` ASC),
  INDEX `fk_customerOrders_customers1_idx` (`customerID` ASC),
  CONSTRAINT `fk_customerOrders_refOrderStatusCodes1`
    FOREIGN KEY (`orderStatusCode`)
    REFERENCES `refOrderStatusCodes` (`orderStatusCode`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_customerOrders_refDeliveryStatusCodes1`
    FOREIGN KEY (`deliveryStatusCode`)
    REFERENCES `refDeliveryStatusCodes` (`deliveryStatusCode`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_customerOrders_addresses1`
    FOREIGN KEY (`shippingAddressID`)
    REFERENCES `addresses` (`addressID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_customerOrders_paymentMethods1`
    FOREIGN KEY (`paymentMethodID`)
    REFERENCES `paymentMethods` (`paymentMethodID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_customerOrders_customers1`
    FOREIGN KEY (`customerID`)
    REFERENCES `customers` (`customerID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `productCategories`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `productCategories` (
  `categoryID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `categoryCode` VARCHAR(45) CHARACTER SET 'utf8' COLLATE 'utf8_unicode_ci' NULL,
  `categoryActive` TINYINT(1) NOT NULL DEFAULT 1,
  `categoryName` VARCHAR(255) CHARACTER SET 'utf8' COLLATE 'utf8_unicode_ci' NULL,
  `categoryDescriptionPublic` TEXT CHARACTER SET 'utf8' COLLATE 'utf8_unicode_ci' NULL,
  `categoryDescriptionPrivate` TEXT NULL,
  `categoryTaxable` TINYINT(1) NULL,
  `categoryPrivate` TINYINT(1) NULL,
  `categoryShowPrice` TINYINT(1) NULL DEFAULT 1,
  PRIMARY KEY (`categoryID`),
  UNIQUE INDEX `category_id_UNIQUE` (`categoryID` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 3;


-- -----------------------------------------------------
-- Table `products`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `products` (
  `productID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `categoryID` BIGINT UNSIGNED NOT NULL,
  `parentProductID` BIGINT UNSIGNED NULL,
  `productActive` TINYINT(1) NOT NULL DEFAULT 1,
  `productName` VARCHAR(255) CHARACTER SET 'utf8' COLLATE 'utf8_unicode_ci' NOT NULL,
  `price` DECIMAL(13,2) NOT NULL DEFAULT 0,
  `productDescriptionPublic` TEXT CHARACTER SET 'utf8' COLLATE 'utf8_unicode_ci' NULL,
  `productDescriptionPrivate` TEXT NULL,
  `productTaxable` TINYINT(1) NULL,
  `productPrivate` TINYINT(1) NULL,
  `productEmail` VARCHAR(255) NULL,
  `productSKU` VARCHAR(255) NULL,
  `productSpecifications` TEXT NULL,
  `productShipping` TEXT NULL,
  `productWarranty` TEXT NULL,
  PRIMARY KEY (`productID`, `categoryID`),
  UNIQUE INDEX `product_id_UNIQUE` (`productID` ASC),
  INDEX `fk_products_products1_idx` (`parentProductID` ASC),
  INDEX `fk_products_product_categories1_idx` (`categoryID` ASC),
  CONSTRAINT `fk_products_products1`
    FOREIGN KEY (`parentProductID`)
    REFERENCES `products` (`productID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_products_product_categories1`
    FOREIGN KEY (`categoryID`)
    REFERENCES `productCategories` (`categoryID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `customerOrderProducts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `customerOrderProducts` (
  `orderID` BIGINT UNSIGNED NOT NULL,
  `productID` BIGINT UNSIGNED NOT NULL,
  `quantity` INT NULL,
  `comments` VARCHAR(1000) NULL,
  `deliveryPrice` DECIMAL(13,2) NULL,
  PRIMARY KEY (`orderID`, `productID`),
  INDEX `fk_customer_order_products_products1_idx` (`productID` ASC),
  CONSTRAINT `fk_customer_order_products_customer_orders1`
    FOREIGN KEY (`orderID`)
    REFERENCES `customerOrders` (`orderID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_customer_order_products_products1`
    FOREIGN KEY (`productID`)
    REFERENCES `products` (`productID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Product information for order.';


-- -----------------------------------------------------
-- Table `productCategoriesSettings`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `productCategoriesSettings` (
  `settingID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `categoryID` BIGINT UNSIGNED NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  `value` VARCHAR(255) NULL DEFAULT NULL,
  PRIMARY KEY (`settingID`, `categoryID`, `name`),
  UNIQUE INDEX `setting_id_UNIQUE` (`settingID` ASC),
  INDEX `fk_product_categories_settings_product_categories1_idx` (`categoryID` ASC),
  CONSTRAINT `fk_product_categories_settings_product_categories1`
    FOREIGN KEY (`categoryID`)
    REFERENCES `productCategories` (`categoryID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 3;


-- -----------------------------------------------------
-- Table `productOptions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `productOptions` (
  `optionID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `storeID` BIGINT UNSIGNED NOT NULL,
  `optionName` VARCHAR(255) NULL,
  `optionType` VARCHAR(255) NOT NULL,
  `optionActive` TINYINT(1) NOT NULL,
  `optionBehavior` VARCHAR(45) NULL,
  `optionRequired` TINYINT(1) NULL,
  PRIMARY KEY (`optionID`, `storeID`, `optionName`),
  UNIQUE INDEX `setting_id_UNIQUE` (`optionID` ASC),
  INDEX `fk_productOptions_stores1_idx` (`storeID` ASC),
  CONSTRAINT `fk_productOptions_stores1`
    FOREIGN KEY (`storeID`)
    REFERENCES `stores` (`storeID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `customerInfo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `customerInfo` (
  `customerID` BIGINT UNSIGNED NOT NULL,
  `companyName` VARCHAR(255) NULL,
  `firstName` VARCHAR(255) NOT NULL,
  `middleName` VARCHAR(255) NULL,
  `lastName` VARCHAR(255) NULL,
  `phone` VARCHAR(255) NULL,
  `email` VARCHAR(255) NULL,
  `notes` TEXT NULL,
  `fingerprint` CHAR(128) NULL,
  `visitorIP` VARCHAR(15) NULL,
  `username` VARCHAR(255) NULL,
  `passphrase` CHAR(128) NULL,
  `regDate` DATETIME NULL,
  `lastLoginDate` DATETIME NULL,
  `lastLoginIP` CHAR(15) NULL,
  `lastFailedLoginDate` DATETIME NULL,
  `lastFailedLoginIP` CHAR(15) NULL,
  `failedLoginAttempts` TINYINT(1) NULL,
  `protectedPrivateKey` BLOB NULL,
  `loginAllowed` TINYINT(1) NULL,
  PRIMARY KEY (`customerID`),
  INDEX `fk_customer_info_customers1_idx` (`customerID` ASC),
  CONSTRAINT `fk_customer_info_customers1`
    FOREIGN KEY (`customerID`)
    REFERENCES `customers` (`customerID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sessions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sessions` (
  `fingerprint` CHAR(128) NOT NULL,
  `storeID` BIGINT UNSIGNED NOT NULL,
  `setTime` CHAR(10) NOT NULL,
  `expiresTime` CHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_persian_ci' NOT NULL,
  `visitorIP` CHAR(15) NULL,
  `cart` TEXT NULL,
  PRIMARY KEY (`fingerprint`, `storeID`),
  INDEX `fk_sessions_stores1_idx` (`storeID` ASC),
  UNIQUE INDEX `fingerprint_UNIQUE` (`fingerprint` ASC),
  CONSTRAINT `fk_sessions_stores1`
    FOREIGN KEY (`storeID`)
    REFERENCES `stores` (`storeID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sessionSettings`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sessionSettings` (
  `fingerprint` CHAR(128) NOT NULL,
  `storeID` BIGINT UNSIGNED NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  `value` TEXT NULL,
  PRIMARY KEY (`fingerprint`, `storeID`, `name`),
  INDEX `fk_sessions_settings_sessions1_idx` (`storeID` ASC, `fingerprint` ASC),
  CONSTRAINT `fk_sessions_settings_sessions1`
    FOREIGN KEY (`storeID` , `fingerprint`)
    REFERENCES `sessions` (`storeID` , `fingerprint`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `refStoresProductCategories`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `refStoresProductCategories` (
  `storeID` BIGINT UNSIGNED NOT NULL,
  `categoryID` BIGINT UNSIGNED NOT NULL,
  `parentCategoryID` BIGINT UNSIGNED NULL,
  `levelNumber` INT UNSIGNED NULL,
  PRIMARY KEY (`categoryID`),
  INDEX `fk_ref_stores_product_categories_product_categories1_idx` (`categoryID` ASC),
  INDEX `fk_ref_stores_product_categories_ref_stores_product_categor_idx` (`parentCategoryID` ASC),
  CONSTRAINT `fk_ref_stores_product_categories_stores1`
    FOREIGN KEY (`storeID`)
    REFERENCES `stores` (`storeID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ref_stores_product_categories_product_categories1`
    FOREIGN KEY (`categoryID`)
    REFERENCES `productCategories` (`categoryID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ref_stores_product_categories_ref_stores_product_categories1`
    FOREIGN KEY (`parentCategoryID`)
    REFERENCES `refStoresProductCategories` (`categoryID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `productPriceHistory`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `productPriceHistory` (
  `productID` BIGINT UNSIGNED NOT NULL,
  `dateFrom` DATETIME NOT NULL,
  `productPrice` DECIMAL(13,2) NOT NULL,
  PRIMARY KEY (`productID`),
  CONSTRAINT `fk_product_prices_products1`
    FOREIGN KEY (`productID`)
    REFERENCES `products` (`productID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `refAddressTypes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `refAddressTypes` (
  `addressTypeCode` VARCHAR(45) NOT NULL,
  `addressTypeDescription` TEXT NULL,
  `sortOrder` TINYINT(1) NULL,
  PRIMARY KEY (`addressTypeCode`),
  UNIQUE INDEX `address_type_code_UNIQUE` (`addressTypeCode` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `customerAddresses`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `customerAddresses` (
  `customerID` BIGINT UNSIGNED NOT NULL,
  `addressID` BIGINT UNSIGNED NOT NULL,
  `addressTypeCode` VARCHAR(45) NOT NULL,
  `dateFrom` DATETIME NOT NULL,
  `dateTo` DATETIME NULL,
  PRIMARY KEY (`customerID`, `addressID`, `addressTypeCode`, `dateFrom`),
  INDEX `fk_customer_addresses_addresses1_idx` (`addressID` ASC),
  INDEX `fk_customer_addresses_ref_address_types1_idx` (`addressTypeCode` ASC),
  CONSTRAINT `fk_customer_addresses_customers1`
    FOREIGN KEY (`customerID`)
    REFERENCES `customers` (`customerID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_customer_addresses_addresses1`
    FOREIGN KEY (`addressID`)
    REFERENCES `addresses` (`addressID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_customer_addresses_ref_address_types1`
    FOREIGN KEY (`addressTypeCode`)
    REFERENCES `refAddressTypes` (`addressTypeCode`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `refPaymentMethodTypes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `refPaymentMethodTypes` (
  `paymentMethodCode` VARCHAR(45) NOT NULL,
  `paymentMethodDescription` TEXT NULL,
  PRIMARY KEY (`paymentMethodCode`),
  UNIQUE INDEX `payment_method_code_UNIQUE` (`paymentMethodCode` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `storeUsers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `storeUsers` (
  `userID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(255) CHARACTER SET 'utf8' COLLATE 'utf8_unicode_ci' NOT NULL,
  `password` CHAR(128) CHARACTER SET 'utf8' COLLATE 'utf8_unicode_ci' NOT NULL,
  `email` VARCHAR(255) CHARACTER SET 'utf8' COLLATE 'utf8_unicode_ci' NOT NULL,
  `userActive` TINYINT(1) UNSIGNED NOT NULL,
  `userNotes` TEXT NULL,
  `protectedPrivateKey` BLOB NULL,
  UNIQUE INDEX `username_UNIQUE` (`username` ASC),
  PRIMARY KEY (`userID`),
  UNIQUE INDEX `user_id_UNIQUE` (`userID` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `customerOrdersDeliveryHistory`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `customerOrdersDeliveryHistory` (
  `customerOrdersDeliveryHistoryID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `orderID` BIGINT UNSIGNED NOT NULL,
  `dateReported` DATETIME NOT NULL,
  `userIDReported` BIGINT UNSIGNED NULL,
  `deliveryStatusCode` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`customerOrdersDeliveryHistoryID`, `orderID`, `dateReported`),
  INDEX `fk_customer_orders_delivery_customer_orders1_idx` (`orderID` ASC),
  INDEX `fk_customer_orders_delivery_ref_delivery_status_codes1_idx` (`deliveryStatusCode` ASC),
  UNIQUE INDEX `customer_orders_delivery_id_UNIQUE` (`customerOrdersDeliveryHistoryID` ASC),
  INDEX `fk_customerOrdersDeliveryHistory_storeUsers1_idx` (`userIDReported` ASC),
  CONSTRAINT `fk_customer_orders_delivery_customer_orders1`
    FOREIGN KEY (`orderID`)
    REFERENCES `customerOrders` (`orderID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_customer_orders_delivery_ref_delivery_status_codes1`
    FOREIGN KEY (`deliveryStatusCode`)
    REFERENCES `refDeliveryStatusCodes` (`deliveryStatusCode`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_customerOrdersDeliveryHistory_storeUsers1`
    FOREIGN KEY (`userIDReported`)
    REFERENCES `storeUsers` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `customerPaymentMethods`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `customerPaymentMethods` (
  `customerID` BIGINT UNSIGNED NOT NULL,
  `paymentMethodID` BIGINT UNSIGNED NOT NULL,
  `paymentMethodCode` VARCHAR(45) NOT NULL,
  `billingAddressID` BIGINT UNSIGNED NOT NULL,
  `dateFrom` DATETIME NOT NULL,
  `dateTo` DATETIME NULL,
  PRIMARY KEY (`customerID`, `paymentMethodID`, `paymentMethodCode`, `dateFrom`),
  INDEX `fk_customer_payment_methods_ref_payment_method_types1_idx` (`paymentMethodCode` ASC),
  INDEX `fk_customer_payment_methods_payment_methods1_idx` (`paymentMethodID` ASC),
  INDEX `fk_customerPaymentMethods_addresses1_idx` (`billingAddressID` ASC),
  CONSTRAINT `fk_customer_payment_methods_customers1`
    FOREIGN KEY (`customerID`)
    REFERENCES `customers` (`customerID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_customer_payment_methods_ref_payment_method_types1`
    FOREIGN KEY (`paymentMethodCode`)
    REFERENCES `refPaymentMethodTypes` (`paymentMethodCode`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_customer_payment_methods_payment_methods1`
    FOREIGN KEY (`paymentMethodID`)
    REFERENCES `paymentMethods` (`paymentMethodID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_customerPaymentMethods_addresses1`
    FOREIGN KEY (`billingAddressID`)
    REFERENCES `addresses` (`addressID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `storeUserSettings`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `storeUserSettings` (
  `userID` BIGINT UNSIGNED NOT NULL,
  `regDate` DATETIME NULL,
  `regIP` CHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_unicode_ci' NULL,
  `lastLoginDate` DATETIME NULL,
  `lastLoginIP` CHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_unicode_ci' NULL,
  `lastFailedLoginDate` DATETIME NULL,
  `lastFailedLoginIP` CHAR(15) NULL,
  `failedLoginAttempts` TINYINT(1) NULL,
  PRIMARY KEY (`userID`),
  CONSTRAINT `fk_store_user_settings_store_users1`
    FOREIGN KEY (`userID`)
    REFERENCES `storeUsers` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `storeUserGroups`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `storeUserGroups` (
  `groupID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `groupName` VARCHAR(45) CHARACTER SET 'utf8' COLLATE 'utf8_unicode_ci' NOT NULL,
  `groupDescription` VARCHAR(255) NULL,
  PRIMARY KEY (`groupID`),
  UNIQUE INDEX `group_id_UNIQUE` (`groupID` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `storeGroupUsers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `storeGroupUsers` (
  `storeID` BIGINT UNSIGNED NOT NULL,
  `userID` BIGINT UNSIGNED NOT NULL,
  `groupID` BIGINT UNSIGNED NOT NULL,
  PRIMARY KEY (`storeID`, `userID`),
  INDEX `fk_store_group_users_store_users1_idx` (`userID` ASC),
  INDEX `fk_storeGroupUsers_stores1_idx` (`storeID` ASC),
  CONSTRAINT `fk_store_group_users_store_user_groups1`
    FOREIGN KEY (`groupID`)
    REFERENCES `storeUserGroups` (`groupID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_store_group_users_store_users1`
    FOREIGN KEY (`userID`)
    REFERENCES `storeUsers` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_storeGroupUsers_stores1`
    FOREIGN KEY (`storeID`)
    REFERENCES `stores` (`storeID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `customerOrderProductsDeliveryHistory`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `customerOrderProductsDeliveryHistory` (
  `customerOrderProductsDeliveryHistoryID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `orderID` BIGINT UNSIGNED NOT NULL,
  `productID` BIGINT UNSIGNED NOT NULL,
  `dateReported` DATETIME NOT NULL,
  `userIDReported` BIGINT UNSIGNED NULL,
  `deliveryStatusCode` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`customerOrderProductsDeliveryHistoryID`, `orderID`, `productID`, `dateReported`),
  INDEX `fk_customer_order_products_delivery_customer_order_products_idx` (`orderID` ASC, `productID` ASC),
  INDEX `fk_customer_order_products_delivery_ref_delivery_status_cod_idx` (`deliveryStatusCode` ASC),
  UNIQUE INDEX `customer_order_products_delivery_UNIQUE` (`customerOrderProductsDeliveryHistoryID` ASC),
  INDEX `fk_customerOrderProductsDeliveryHistory_storeUsers1_idx` (`userIDReported` ASC),
  CONSTRAINT `fk_customer_order_products_delivery_customer_order_products1`
    FOREIGN KEY (`orderID` , `productID`)
    REFERENCES `customerOrderProducts` (`orderID` , `productID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_customer_order_products_delivery_ref_delivery_status_codes1`
    FOREIGN KEY (`deliveryStatusCode`)
    REFERENCES `refDeliveryStatusCodes` (`deliveryStatusCode`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_customerOrderProductsDeliveryHistory_storeUsers1`
    FOREIGN KEY (`userIDReported`)
    REFERENCES `storeUsers` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `customerOrdersStatusHistory`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `customerOrdersStatusHistory` (
  `customerOrdersStatusHistoryID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `orderID` BIGINT UNSIGNED NOT NULL,
  `dateReported` DATETIME NOT NULL,
  `userIDReported` BIGINT UNSIGNED NULL,
  `orderStatusCode` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`customerOrdersStatusHistoryID`, `orderID`, `dateReported`),
  INDEX `fk_customer_orders_payment_ref_order_status_codes1_idx` (`orderStatusCode` ASC),
  UNIQUE INDEX `customer_orders_payment_id_UNIQUE` (`customerOrdersStatusHistoryID` ASC),
  INDEX `fk_customerOrdersStatusHistory_storeUsers1_idx` (`userIDReported` ASC),
  CONSTRAINT `fk_customer_orders_payment_customer_orders1`
    FOREIGN KEY (`orderID`)
    REFERENCES `customerOrders` (`orderID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_customer_orders_payment_ref_order_status_codes1`
    FOREIGN KEY (`orderStatusCode`)
    REFERENCES `refOrderStatusCodes` (`orderStatusCode`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_customerOrdersStatusHistory_storeUsers1`
    FOREIGN KEY (`userIDReported`)
    REFERENCES `storeUsers` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mercuryPayHistory`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mercuryPayHistory` (
  `mercuryPayHistoryID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `orderID` BIGINT UNSIGNED NOT NULL,
  `customerID` BIGINT UNSIGNED NOT NULL,
  `paymentMethodID` BIGINT UNSIGNED NOT NULL,
  `dateReported` DATETIME NOT NULL,
  `action` VARCHAR(45) NULL,
  `amount` DECIMAL(13,2) NULL,
  `returnCode` VARCHAR(45) NULL,
  `returnStatus` VARCHAR(45) NULL,
  `returnTextResponse` VARCHAR(255) NULL,
  `returnMessage` VARCHAR(255) NULL,
  `avsResult` VARCHAR(45) NULL,
  `cvvResult` VARCHAR(45) NULL,
  `authCode` VARCHAR(45) NULL,
  `acqRefData` VARCHAR(200) NULL,
  `refNo` VARCHAR(45) NULL,
  `processData` VARCHAR(200) NULL,
  PRIMARY KEY (`mercuryPayHistoryID`, `orderID`, `customerID`, `paymentMethodID`),
  UNIQUE INDEX `mercuryPayHistoryID_UNIQUE` (`mercuryPayHistoryID` ASC),
  INDEX `fk_mercuryPayHistory_customerOrders1_idx` (`orderID` ASC, `customerID` ASC),
  INDEX `fk_mph_pID_cpm_pID_idx` (`paymentMethodID` ASC),
  CONSTRAINT `fk_mercuryPayHistory_customerOrders1`
    FOREIGN KEY (`orderID`)
    REFERENCES `customerOrders` (`orderID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_mph_pID_cpm_pID`
    FOREIGN KEY (`paymentMethodID`)
    REFERENCES `customerPaymentMethods` (`paymentMethodID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mercuryPayCustomerPaymentMethods`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mercuryPayCustomerPaymentMethods` (
  `customerID` BIGINT UNSIGNED NOT NULL,
  `paymentMethodID` BIGINT UNSIGNED NOT NULL,
  `frequency` VARCHAR(45) NULL,
  `recordNo` VARCHAR(100) NULL,
  `dateLastUsed` DATETIME NULL,
  PRIMARY KEY (`customerID`, `paymentMethodID`),
  CONSTRAINT `fk_mercuryPayCustomerPaymentMethods_customerPaymentMethods1`
    FOREIGN KEY (`customerID` , `paymentMethodID`)
    REFERENCES `customerPaymentMethods` (`customerID` , `paymentMethodID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `paymentGateways`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `paymentGateways` (
  `gatewayID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `gatewayName` VARCHAR(45) NULL,
  `gatewayURL` VARCHAR(255) NULL,
  `gatewayUsername` VARCHAR(255) NULL,
  `gatewayPassphrase` VARCHAR(255) NULL,
  `gatewayNotes` TEXT NULL,
  `gatewayTemplate` VARCHAR(255) NULL,
  `gatewayOffline` TINYINT(1) NULL,
  PRIMARY KEY (`gatewayID`),
  UNIQUE INDEX `gatewayID_UNIQUE` (`gatewayID` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `storesPaymentGateways`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `storesPaymentGateways` (
  `storeID` BIGINT UNSIGNED NOT NULL,
  `gatewayID` BIGINT UNSIGNED NOT NULL,
  `gatewayActive` TINYINT(1) NULL,
  PRIMARY KEY (`storeID`, `gatewayID`),
  INDEX `fk_storesPaymentGateways_paymentGateways1_idx` (`gatewayID` ASC),
  CONSTRAINT `fk_storesPaymentGateways_stores1`
    FOREIGN KEY (`storeID`)
    REFERENCES `stores` (`storeID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_storesPaymentGateways_paymentGateways1`
    FOREIGN KEY (`gatewayID`)
    REFERENCES `paymentGateways` (`gatewayID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `storesTaxRates`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `storesTaxRates` (
  `storeID` BIGINT UNSIGNED NOT NULL,
  `stateCode` VARCHAR(10) NULL,
  `stateLabel` VARCHAR(255) NULL,
  `stateTaxRate` DECIMAL(5,2) NULL,
  PRIMARY KEY (`storeID`, `stateCode`),
  CONSTRAINT `fk_storesTaxRates_stores1`
    FOREIGN KEY (`storeID`)
    REFERENCES `stores` (`storeID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `messageLog`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `messageLog` (
  `messageID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `messageDateTime` DATETIME NULL,
  `messageStoreID` BIGINT UNSIGNED NULL,
  `messageType` VARCHAR(45) NULL,
  `messageBody` TEXT NULL,
  `messageFile` VARCHAR(1000) NULL,
  `messageLine` VARCHAR(45) NULL,
  PRIMARY KEY (`messageID`),
  UNIQUE INDEX `messageID_UNIQUE` (`messageID` ASC),
  INDEX `fk_messageLog_stores1_idx` (`messageStoreID` ASC),
  CONSTRAINT `fk_messageLog_stores1`
    FOREIGN KEY (`messageStoreID`)
    REFERENCES `stores` (`storeID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `images`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `images` (
  `imageID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `parentImageID` BIGINT UNSIGNED NULL,
  `imageActive` TINYINT(1) NOT NULL,
  `imageName` VARCHAR(255) NOT NULL,
  `imageExt` VARCHAR(4) NOT NULL,
  `imageWidth` INT NULL,
  `imageHeight` INT NULL,
  `imageOrientation` VARCHAR(45) NULL,
  `imageDateCreated` DATETIME NULL,
  `storeID` BIGINT UNSIGNED NOT NULL,
  `userID` BIGINT UNSIGNED NULL,
  `customerID` BIGINT UNSIGNED NULL,
  `categoryID` BIGINT UNSIGNED NULL,
  `productID` BIGINT UNSIGNED NULL,
  `imageSortOrder` INT NULL,
  `showInCarousel` TINYINT(1) NULL,
  `showInCarouselThumbs` TINYINT(1) NULL DEFAULT 1,
  PRIMARY KEY (`imageID`, `storeID`),
  INDEX `fk_stores1_idx` (`storeID` ASC),
  INDEX `fk_products1_idx` (`productID` ASC),
  INDEX `fk_customers1_idx` (`customerID` ASC),
  INDEX `fk_storeUsers1_idx` (`userID` ASC),
  INDEX `fk_productCategories1_idx` (`categoryID` ASC),
  UNIQUE INDEX `imageID_UNIQUE` (`imageID` ASC),
  INDEX `fk_images_images1_idx` (`parentImageID` ASC),
  CONSTRAINT `fk_stores1`
    FOREIGN KEY (`storeID`)
    REFERENCES `stores` (`storeID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_products1`
    FOREIGN KEY (`productID`)
    REFERENCES `products` (`productID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_customers1`
    FOREIGN KEY (`customerID`)
    REFERENCES `customers` (`customerID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_storeUsers1`
    FOREIGN KEY (`userID`)
    REFERENCES `storeUsers` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_productCategories1`
    FOREIGN KEY (`categoryID`)
    REFERENCES `productCategories` (`categoryID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_images_images1`
    FOREIGN KEY (`parentImageID`)
    REFERENCES `images` (`imageID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `productOptionsChoices`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `productOptionsChoices` (
  `choiceID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `optionID` BIGINT UNSIGNED NOT NULL,
  `choiceValue` TEXT NULL,
  `choicePrice` DECIMAL(13,2) NULL,
  `choiceActive` TINYINT(1) NULL,
  `choiceImageID` BIGINT UNSIGNED NULL,
  `choiceSortOrder` TINYINT(10) NULL,
  PRIMARY KEY (`choiceID`, `optionID`),
  UNIQUE INDEX `settingID_UNIQUE` (`choiceID` ASC),
  INDEX `fk_productOptionsDetails_productOptions1_idx` (`optionID` ASC),
  INDEX `fk_productOptionsDetails_images1_idx` (`choiceImageID` ASC),
  CONSTRAINT `fk_productOptionsDetails_productOptions1`
    FOREIGN KEY (`optionID`)
    REFERENCES `productOptions` (`optionID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_productOptionsDetails_images1`
    FOREIGN KEY (`choiceImageID`)
    REFERENCES `images` (`imageID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `productOptionsCustom`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `productOptionsCustom` (
  `optionIDCustom` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `productID` BIGINT UNSIGNED NOT NULL,
  `optionIDGlobal` BIGINT UNSIGNED NOT NULL,
  `optionNameCustom` VARCHAR(255) NOT NULL,
  `optionActiveCustom` TINYINT(1) NOT NULL,
  `optionBehaviorCustom` VARCHAR(45) NULL,
  `optionRequiredCustom` TINYINT(1) NULL,
  `optionSortOrder` TINYINT(10) NULL,
  `inheritsGlobalOption` TINYINT(1) NULL,
  INDEX `fk_refProductOptionsProducts_products1_idx` (`productID` ASC),
  INDEX `fk_refProductOptionsProducts_productOptions1_idx` (`optionIDGlobal` ASC),
  PRIMARY KEY (`optionIDCustom`),
  UNIQUE INDEX `refProductOptionsProductsID_UNIQUE` (`optionIDCustom` ASC),
  CONSTRAINT `fk_refProductOptionsProducts_products1`
    FOREIGN KEY (`productID`)
    REFERENCES `products` (`productID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_refProductOptionsProducts_productOptions1`
    FOREIGN KEY (`optionIDGlobal`)
    REFERENCES `productOptions` (`optionID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `productOptionsChoicesCustom`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `productOptionsChoicesCustom` (
  `choiceIDCustom` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `optionIDCustom` BIGINT UNSIGNED NOT NULL,
  `choiceIDGlobal` BIGINT UNSIGNED NULL,
  `choiceValueCustom` TEXT NULL,
  `choicePriceCustom` DECIMAL(13,2) NULL,
  `choiceActiveCustom` TINYINT(1) NULL,
  `choiceImageIDCustom` BIGINT UNSIGNED NULL,
  `choiceSortOrderCustom` TINYINT(10) NULL,
  PRIMARY KEY (`choiceIDCustom`, `optionIDCustom`),
  UNIQUE INDEX `productOptionChoiceID_UNIQUE` (`choiceIDCustom` ASC),
  INDEX `fk_refProductOptionsProductsChoices_productOptionsChoices1_idx` (`choiceIDGlobal` ASC),
  INDEX `fk_productOptionsChoicesCustom_productOptionsCustom1_idx` (`optionIDCustom` ASC),
  INDEX `fk_productOptionsChoicesCustom_images1_idx` (`choiceImageIDCustom` ASC),
  CONSTRAINT `fk_refProductOptionsProductsChoices_productOptionsChoices1`
    FOREIGN KEY (`choiceIDGlobal`)
    REFERENCES `productOptionsChoices` (`choiceID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_productOptionsChoicesCustom_productOptionsCustom1`
    FOREIGN KEY (`optionIDCustom`)
    REFERENCES `productOptionsCustom` (`optionIDCustom`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_productOptionsChoicesCustom_images1`
    FOREIGN KEY (`choiceImageIDCustom`)
    REFERENCES `images` (`imageID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `customerOrderProductsOptions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `customerOrderProductsOptions` (
  `copoID` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `orderID` BIGINT UNSIGNED NOT NULL,
  `productID` BIGINT UNSIGNED NOT NULL,
  `productOptionCustomID` BIGINT UNSIGNED NOT NULL,
  `productOptionChoiceCustomID` BIGINT UNSIGNED NOT NULL,
  `optionValue` TEXT NULL,
  INDEX `fk_customerOrderProductsOptions_customerOrderProducts1_idx` (`orderID` ASC),
  INDEX `fk_customerOrderProductsOptions_products1_idx` (`productID` ASC),
  PRIMARY KEY (`copoID`),
  UNIQUE INDEX `copoID_UNIQUE` (`copoID` ASC),
  INDEX `fk_customerOrderProductsOptions_refProductOptionsProducts1_idx` (`productOptionCustomID` ASC),
  INDEX `fk_customerOrderProductsOptions_productOptionsChoicesCustom_idx` (`productOptionChoiceCustomID` ASC),
  CONSTRAINT `fk_customerOrderProductsOptions_customerOrderProducts1`
    FOREIGN KEY (`orderID`)
    REFERENCES `customerOrderProducts` (`orderID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_customerOrderProductsOptions_products1`
    FOREIGN KEY (`productID`)
    REFERENCES `products` (`productID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_customerOrderProductsOptions_refProductOptionsProducts1`
    FOREIGN KEY (`productOptionCustomID`)
    REFERENCES `productOptionsCustom` (`optionIDCustom`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_customerOrderProductsOptions_productOptionsChoicesCustom1`
    FOREIGN KEY (`productOptionChoiceCustomID`)
    REFERENCES `productOptionsChoicesCustom` (`choiceIDCustom`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `customerUserExchange`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `customerUserExchange` (
  `sessionName` VARCHAR(255) NOT NULL,
  `sessionValue` VARCHAR(255) NOT NULL,
  `authenticated` TINYINT(1) NULL,
  `existingUser` VARCHAR(255) NULL,
  `cartCustomerID` BIGINT UNSIGNED NULL,
  `sessionExpires` DATETIME NULL,
  `consumed` TINYINT(1) NULL,
  PRIMARY KEY (`sessionName`, `sessionValue`),
  UNIQUE INDEX `sessionValue_UNIQUE` (`sessionValue` ASC),
  INDEX `fk_customerUserExchangeHistory_customers1_idx` (`cartCustomerID` ASC),
  CONSTRAINT `fk_customerUserExchangeHistory_customers1`
    FOREIGN KEY (`cartCustomerID`)
    REFERENCES `customers` (`customerID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_unicode_ci;


-- -----------------------------------------------------
-- Table `refProductOptionsChoices`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `refProductOptionsChoices` (
  `parentOptionID` BIGINT UNSIGNED NOT NULL,
  `childOptionID` BIGINT UNSIGNED NOT NULL,
  `triggerChoiceID` BIGINT UNSIGNED NULL,
  INDEX `fk_refProductOptionsChoices_productOptions1_idx` (`parentOptionID` ASC),
  INDEX `fk_refProductOptionsChoices_productOptionsDetails1_idx` (`triggerChoiceID` ASC),
  INDEX `fk_refProductOptionsChoices_productOptions2_idx` (`childOptionID` ASC),
  CONSTRAINT `fk_refProductOptionsChoices_productOptions1`
    FOREIGN KEY (`parentOptionID`)
    REFERENCES `productOptions` (`optionID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_refProductOptionsChoices_productOptionsDetails1`
    FOREIGN KEY (`triggerChoiceID`)
    REFERENCES `productOptionsChoices` (`choiceID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_refProductOptionsChoices_productOptions2`
    FOREIGN KEY (`childOptionID`)
    REFERENCES `productOptions` (`optionID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `refProductOptionsChoicesCustom`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `refProductOptionsChoicesCustom` (
  `parentOptionIDCustom` BIGINT UNSIGNED NOT NULL,
  `childOptionIDCustom` BIGINT UNSIGNED NOT NULL,
  `triggerChoiceIDCustom` BIGINT UNSIGNED NULL,
  INDEX `fk_refProductOptionsChoicesCustom_productOptionsCustom2_idx` (`childOptionIDCustom` ASC),
  INDEX `fk_refProductOptionsChoicesCustom_productOptionsChoicesCust_idx` (`triggerChoiceIDCustom` ASC),
  CONSTRAINT `fk_refProductOptionsChoicesCustom_productOptionsCustom1`
    FOREIGN KEY (`parentOptionIDCustom`)
    REFERENCES `productOptionsCustom` (`optionIDCustom`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_refProductOptionsChoicesCustom_productOptionsCustom2`
    FOREIGN KEY (`childOptionIDCustom`)
    REFERENCES `productOptionsCustom` (`optionIDCustom`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_refProductOptionsChoicesCustom_productOptionsChoicesCustom1`
    FOREIGN KEY (`triggerChoiceIDCustom`)
    REFERENCES `productOptionsChoicesCustom` (`choiceIDCustom`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `storefrontCarousel`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `storefrontCarousel` (
  `storeID` BIGINT UNSIGNED NOT NULL,
  `interval` TINYINT(1) NULL,
  `slide1ImageID` BIGINT UNSIGNED NULL,
  `slide1Title` VARCHAR(255) NULL,
  `slide1Description` TEXT NULL,
  `slide1URL` VARCHAR(255) NULL,
  `slide2ImageID` BIGINT UNSIGNED NULL,
  `slide2Title` VARCHAR(255) NULL,
  `slide2Description` TEXT NULL,
  `slide2URL` VARCHAR(255) NULL,
  `slide3ImageID` BIGINT UNSIGNED NULL,
  `slide3Title` VARCHAR(255) NULL,
  `slide3Description` TEXT NULL,
  `slide3URL` VARCHAR(255) NULL,
  `slide4ImageID` BIGINT UNSIGNED NULL,
  `slide4Title` VARCHAR(255) NULL,
  `slide4Description` TEXT NULL,
  `slide4URL` VARCHAR(255) NULL,
  `slide5ImageID` BIGINT UNSIGNED NULL,
  `slide5Title` VARCHAR(255) NULL,
  `slide5Description` TEXT NULL,
  `slide5URL` VARCHAR(255) NULL,
  PRIMARY KEY (`storeID`),
  INDEX `fk_storefrontCarousel_images1_idx` (`slide1ImageID` ASC),
  INDEX `fk_storefrontCarousel_images2_idx` (`slide2ImageID` ASC),
  INDEX `fk_storefrontCarousel_images3_idx` (`slide3ImageID` ASC),
  INDEX `fk_storefrontCarousel_images4_idx` (`slide4ImageID` ASC),
  INDEX `fk_storefrontCarousel_images5_idx` (`slide5ImageID` ASC),
  UNIQUE INDEX `storeID_UNIQUE` (`storeID` ASC),
  CONSTRAINT `fk_storefrontCarousel_stores1`
    FOREIGN KEY (`storeID`)
    REFERENCES `stores` (`storeID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_storefrontCarousel_images1`
    FOREIGN KEY (`slide1ImageID`)
    REFERENCES `images` (`imageID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_storefrontCarousel_images2`
    FOREIGN KEY (`slide2ImageID`)
    REFERENCES `images` (`imageID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_storefrontCarousel_images3`
    FOREIGN KEY (`slide3ImageID`)
    REFERENCES `images` (`imageID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_storefrontCarousel_images4`
    FOREIGN KEY (`slide4ImageID`)
    REFERENCES `images` (`imageID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_storefrontCarousel_images5`
    FOREIGN KEY (`slide5ImageID`)
    REFERENCES `images` (`imageID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
